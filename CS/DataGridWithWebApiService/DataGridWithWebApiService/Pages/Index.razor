@page "/"

@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient Http
@inject WebServicePath wsp
@using DataGridWithWebApiService.Data

<DxGrid Data=@categories 
        ShowFilterRow="false" 
        PagerVisible="false" 
        EditModelSaving="OnEditModelSaving"
        DataItemDeleting="OnDataItemDeleting">
    <Columns>
        <DxGridCommandColumn Width="150px" />
        <DxGridDataColumn FieldName=@nameof(Categories.CategoryId) />
        <DxGridDataColumn FieldName=@nameof(Categories.CategoryName) />
        <DxGridDataColumn FieldName=@nameof(Categories.Description) />
    </Columns>
    <EditFormTemplate Context="EditFormContext">
        @{
            var category = (Categories)EditFormContext.EditModel;
        }
        <DxFormLayout>
            <DxFormLayoutItem Caption="Category Name">
                <DxTextBox @bind-Text=category.CategoryName />
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Description">
                <DxTextBox @bind-Text=category.Description />
            </DxFormLayoutItem>
        </DxFormLayout>
    </EditFormTemplate>
</DxGrid>


@code {
    List<Categories>? categories;
    async Task OnEditModelSaving(GridEditModelSavingEventArgs e) {
        if(e.IsNew) {
            Categories newCategory = new Categories();
            SetNewValues(newCategory, (Categories)e.EditModel);
            await Http.PostAsJsonAsync<Categories>(wsp.Path + "categories/", newCategory);
            categories = await Http.GetFromJsonAsync<List<Categories>>(wsp.Path + "categories");
        }
        else {
            var dataItem = (Categories)e.DataItem;
            SetNewValues(dataItem, (Categories)e.EditModel);
            await Http.PutAsJsonAsync(wsp.Path + "categories/" + dataItem.CategoryId, dataItem);
            categories = await Http.GetFromJsonAsync<List<Categories>>(wsp.Path + "categories");
        }
    }
    protected override async Task OnInitializedAsync() {
        categories = await Http.GetFromJsonAsync<List<Categories>>(wsp.Path + "categories");
    }
    async Task OnDataItemDeleting(GridDataItemDeletingEventArgs e) {
        await Http.DeleteAsync(wsp.Path + "categories/" + ((Categories)e.DataItem).CategoryId);
        categories = await Http.GetFromJsonAsync<List<Categories>>(wsp.Path + "categories");
    }
    private void SetNewValues(Categories dataItem, Categories newValues) {
        dataItem.CategoryName = newValues.CategoryName;
        dataItem.Description = newValues.Description;
    }
}

